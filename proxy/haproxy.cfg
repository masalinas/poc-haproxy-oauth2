# This is a default haproxy config, for the initial start of haproxy when there are no containers around or docker-gen is starting
global
  #stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  stats socket /var/run/api.sock user root group root mode 660 level admin expose-fd listeners
  log stdout format raw local0 info

defaults
  mode http
  timeout client 10s
  timeout connect 5s
  timeout server 10s
  timeout http-request 10s
  log global

resolvers docker
  nameserver dns "${DNS_TCP_ADDR}:${DNS_TCP_PORT}"

frontend mock
  bind *:80

  http-request deny content-type 'text/html' string 'Missing Authorization HTTP header' unless { req.hdr(authorization) -m found }

  # get header part of the JWT
  http-request set-var(txn.alg) http_auth_bearer,jwt_header_query('$.alg')

  # get payload part of the JWT
  http-request set-var(txn.iss) http_auth_bearer,jwt_payload_query('$.iss')
  http-request set-var(txn.aud) http_auth_bearer,jwt_payload_query('$.aud')
  http-request set-var(txn.exp) http_auth_bearer,jwt_payload_query('$.exp','int')
  http-request set-var(txn.scope) http_auth_bearer,jwt_payload_query('$.scope')

  # Validate the JWT
  http-request deny content-type 'text/html' string 'Unsupported JWT signing algorithm'  unless { var(txn.alg) -m str RS256 }
  #http-request deny content-type 'text/html' string 'Invalid JWT issuer'  unless { var(txn.iss) -m str http://localhost:8080 }
  #http-request deny content-type 'text/html' string 'Invalid JWT audience'  unless { var(txn.aud) -m str http://consum-mock }
  #http-request deny content-type 'text/html' string 'Invalid JWT signature'  unless { http_auth_bearer,jwt_verify(txn.alg,"/etc/haproxy/pubkey.pem") -m int 1 }

  http-request set-var(txn.now) date()
  http-request deny content-type 'text/html' string 'JWT has expired' if { var(txn.exp),sub(txn.now) -m int lt 0 }

  http-request deny if { path_beg /api/ } { method GET } ! { var(txn.scope) -m sub read }
  #http-request deny if { path_beg /api/ } { method DELETE POST PUT } ! { var(txn.scope) -m sub write }

  default_backend mock

backend mock
  server mock-server consum-mock:8088 check resolvers docker resolve-prefer ipv4
